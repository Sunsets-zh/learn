clear all
err=0.001;%给定期望误差最小值
lr=0.9;%设置学习速率
max=10000;%设置最大学习次数
P=[0, 1, 1, -1, -1, -1, 0;...
   1, 0, 1,  0,  1, -1,-1;...
   1, 1, 1,  1,  1,  1, 1 ];%提供输入训练样本集
P
T=[1, 0, 0, 1, 1, 1,0];%提供输出期望
T
[M,N]=size(P);%M为输入节点的数量//M：行数 N：列数
[L,N]=size(T);%L为输出节点的数量，N是训练样本数；L：期望行数；N列数2
%用这个取行列的函数是为了以后修改方便，只改P和T就行
W=rand(L,M);%初始化//W(1)=W1,W(2)=W2,W(3)=b(偏置)
W
y=0;
%训练环节-----前七组训练
for epoch=1:max%次数在1到最大值内
    V=W*P;%V是输出单元的输入
    for j=1:N%训练的样本从1到N
        for i=1:L%输出的节点从1到L
        if(V(i,j)>=0)%单边阈值函数
            y(i,j)=1;
        else
            y(i,j)=0;
        end
        end
    end
E=(T-y);%期望减去输出得到误差
    EE=0;%初始化误差=0
    for j=1:N
        EE=EE+abs(E(j));
    end
    if(EE<err)
        break;
    end
W=W+lr*E*P';
end
W
%===================================
%==================================
%验证环节----最后一组验证
x1=[1;-1;1];
m=W*x1;
if(m>=0)
    y=1;
else
    y=0;
end
y
epoch
figure;
       % 显示待分类的点和分类结果
plot([1,1,0],[0,1,-1],'o');
hold on;
plot([0 ,-1,-1,-1],[1,0,1,-1],'*');
axis([-2,2,-1,2]);
legend('第一类','第二类');
title('7个坐标点的二分类');
x=-2:.02:2;
y=x*(-W(2)/W(1))-W(3)/W(1);
plot(y,x);
hold off;

            
